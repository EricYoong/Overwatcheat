import java.nio.file.Files

/*
 * Free, open-source undetected color cheat for Overwatch!
 * Copyright (C) 2017  Thomas G. Nappo
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

group 'com.overwatcheat'
version '3.5.0'

buildscript {
	ext.kotlin_version = '1.4.32'
	ext.gdxVersion = '1.10.0'
	ext.visuiVersion = "1.4.7"
	
	repositories {
		jcenter()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
	}
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: "com.github.johnrengelman.shadow"

mainClassName = 'com.overwatcheat.Overwatcheat'

repositories {
	jcenter()
}

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
	
	implementation group: 'org.bytedeco', name: 'javacv-platform', version: '1.5.5'
	
	implementation group: 'net.java.dev.jna', name: 'jna', version: '5.8.0'
	implementation group: 'net.java.dev.jna', name: 'jna-platform', version: '5.8.0'
	
	implementation group: 'it.unimi.dsi', name: 'fastutil', version: '8.5.4'
	
	implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	implementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
	implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
	implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
	implementation "com.kotcrab.vis:vis-ui:$visuiVersion"
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}

shadowJar {
	setMainClassName(mainClassName)
	getArchiveBaseName().set("Overwatcheat")
	getArchiveClassifier().set(null)
}

task overwatcheat {
	doLast {
		def name = "Overwatcheat $version"
		
		def dir = file("build/$name/")
		if (dir.exists()) dir.deleteDir()
		dir.mkdirs()
		
		def jarName = "${name}.jar"
		def jar = file(new File(dir, jarName))
		def allJar = file("build/libs/Overwatcheat-${version}.jar")
		Files.copy(allJar.toPath(), jar.toPath())
		
		def bat = file(new File(dir, "Start ${name}.bat"))
		Files.write(bat.toPath(), """@echo off
cd /d "%~dp0"
title $name
java -jar "$jarName"
pause""".getBytes())
		
		Files.copy(file("overwatcheat.cfg").toPath(), file(new File(dir, "overwatcheat.cfg")).toPath())
		
		Files.copy(file("LICENSE.txt").toPath(), file(new File(dir, "LICENSE.txt")).toPath())
		Files.copy(file("README.md").toPath(), file(new File(dir, "README.md")).toPath())
	}
}

overwatcheat.dependsOn shadowJar
overwatcheat.mustRunAfter shadowJar

sourceSets {
	main.java.srcDirs += 'src/main/java'
	main.java.srcDirs += 'src/main/kotlin'
}